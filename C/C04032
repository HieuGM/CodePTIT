#include<stdio.h>
#include<math.h>
int check(long long n)
{
	while (n>10)
	{
		int tmp = n%10;
		n/=10;
		if(tmp < n%10) return 0;
	}
	return 1;
}
void swap(long long *a, long long *b)
{
	long long tmp = *a;
	*a = *b;
	*b = tmp;
}
int main()
{
	long long a[100005][2];
	int cnt = 0;
	long long n;
	while (scanf("%lld", &n) != -1)
	{
		if (check(n)) a[cnt++][0] = n;
	}
	int b[100005] = {0};
	int dem1 = 0;
	for (int i = 0; i < cnt; i++)
	{
		long long dem = 1;
		if (b[i] == 0)
		{
			for (int j = i+1; j < cnt; j++)
			{
				if (a[i][0] == a[j][0])
				{
					dem++;
					b[j] = 1;
				}
			}
			a[i][1] = dem;
			dem1++;
		}
	}
	for (int i = 0; i < cnt; i++)
	{
		for (int j = 0; j < cnt-i-1; j++)
		{
			if (a[j][1] < a[j+1][1])
			{
				swap(&a[j][1], &a[j+1][1]);
				swap(&a[j][0], &a[j+1][0]);
			}
		}
	}
	for (int i = 0; i < dem1; i++)
	{
			printf("%lld %lld\n", a[i][0], a[i][1]);
	}
	
}
